name: Quick Build - MedicalLabAnalyzer

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  quick-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [8.0.x]
        include:
          - dotnet-version: '8.0.x'
            os: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg libgdiplus
    
    - name: Restore dependencies
      run: dotnet restore MedicalLabAnalyzer.Linux.csproj
    
    - name: Build
      run: dotnet build MedicalLabAnalyzer.Linux.csproj --configuration Release --no-restore
    
    - name: Test
      run: dotnet test MedicalLabAnalyzer.Linux.csproj --no-build --verbosity normal
    
    - name: Build Docker image
      run: docker build -t medicallab-analyzer:latest .
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          bin/
          obj/
        retention-days: 1

  quick-nextjs-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: medical-lab-analyzer/package-lock.json
    
    - name: Install dependencies
      working-directory: medical-lab-analyzer
      run: npm ci
    
    - name: Build Next.js application
      working-directory: medical-lab-analyzer
      run: npm run build
    
    - name: Upload Next.js build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nextjs-build-artifacts
        path: medical-lab-analyzer/.next/
        retention-days: 1